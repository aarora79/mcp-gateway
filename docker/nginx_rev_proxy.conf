# First server block handles HTTP requests
server {
    listen 80;
    listen [::]:80;
    server_name mcpgateway localhost mcpgateway.ddns.net ec2-44-192-72-20.compute-1.amazonaws.com;

    # Route for registry service
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through authentication headers for service-specific tokens
        proxy_pass_request_headers on;
        # Preserve headers prefixed with X-Service-Auth-
        proxy_set_header X-Service-Auth-Github $http_x_service_auth_github;
        proxy_set_header X-Service-Auth-AWS $http_x_service_auth_aws;
        proxy_set_header X-Service-Auth-Token $http_x_service_auth_token;
    }

    # Dynamic locations - ONLY for HTTP server
    # DYNAMIC_LOCATIONS_START
    # Dynamic locations will be inserted here by the registry service
    # DYNAMIC_LOCATIONS_END

    # Bedrock integration endpoint (OPTIONAL - configure via environment variables)
    # To enable, set AWS_API_GATEWAY_URL environment variable
    # Example: AWS_API_GATEWAY_URL=your-api-id.execute-api.region.amazonaws.com
    # location /tsbedrock/ {
    #     proxy_pass https://${AWS_API_GATEWAY_URL}/prod/;
    #     proxy_set_header Host ${AWS_API_GATEWAY_URL};
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_ssl_server_name on;
    #     proxy_buffer_size 16k;
    #     proxy_buffers 4 16k;
    #     rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    # }

    error_log /var/log/nginx/error.log info;
}

# HTTPS server for clients that prefer it
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name mcpgateway localhost mcpgateway.ddns.net ec2-44-192-72-20.compute-1.amazonaws.com;

    # SSL Configuration using the self-signed certificates generated in the Dockerfile/entrypoint
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # Stronger cipher suite
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # Duplicate the same location blocks for HTTPS access
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through authentication headers for service-specific tokens
        proxy_pass_request_headers on;
        # Preserve headers prefixed with X-Service-Auth-
        proxy_set_header X-Service-Auth-Github $http_x_service_auth_github;
        proxy_set_header X-Service-Auth-AWS $http_x_service_auth_aws;
        proxy_set_header X-Service-Auth-Token $http_x_service_auth_token;
    }

    # Dynamic locations - ONLY for HTTP server
    # DYNAMIC_LOCATIONS_START
    # Dynamic locations will be inserted here by the registry service
    # DYNAMIC_LOCATIONS_END
    
    # Bedrock integration endpoint (OPTIONAL - configure via environment variables)
    # To enable, set AWS_API_GATEWAY_URL environment variable
    # Example: AWS_API_GATEWAY_URL=your-api-id.execute-api.region.amazonaws.com
    # location /tsbedrock/ {
    #     proxy_pass https://${AWS_API_GATEWAY_URL}/prod/;
    #     proxy_set_header Host ${AWS_API_GATEWAY_URL};
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_ssl_server_name on;
    #     proxy_buffer_size 16k;
    #     proxy_buffers 4 16k;
    #     rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    # }
    
    error_log /var/log/nginx/error.log info;
}